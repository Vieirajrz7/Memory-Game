/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.etecdracena.jogosdigitais.memorygame;

import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Marcelo Vieira
 */
public class ScreenGame extends javax.swing.JFrame implements ActionListener {
    
    private Object buttonFirstSelected, buttonSecondSelected;
    private JLabel playerScore;
    private Icon images[];
    private Container container;
    private String theme;
    private Integer factor, hits, attempts;
    private boolean firstSelected = true;
    private boolean check = true;
    private Player player;
    private GameButton firstButton, secondButton, imageButton[];

    /**
     * Creates new form ScreenGame
     */
    public ScreenGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScreenGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScreenGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScreenGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScreenGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScreenGame().setVisible(true);
            }
        });
    }

    private void choiceTema(Integer theme) {
        switch (theme) {
            case 1:
                this.theme = "images/tema/rickAndMorty";
                break;
            /*
            ----For V2
            case 2:
                this.theme = "images/tema/..."
                break;
            */
        }
    }
    
    private void resumeGame() {
        StringBuilder resume = new StringBuilder();
        resume.append("Player: ").append(player.getName()).append("\n\n");
        resume.append("Points: ").append(player.getPoints()).append("\n\n");
        resume.append("Attempts: ").append(attempts);
        
        JOptionPane.showMessageDialog(null, resume.toString(), "Resumo do Jogo", JOptionPane.INFORMATION_MESSAGE);
        setVisible(false);
    }
    
    private JPanel panelImages() {
        JPanel panel = new JPanel();
        GridLayout grid = new GridLayout(factor, factor, 5, 5);
        panel.setLayout(grid);
        
        int resultFactor = factor * factor;
        imageButton = new GameButton[resultFactor];
        
        for (int cont = 0;  cont < resultFactor; cont++) {
            imageButton[cont] = new GameButton(insertDefaultImage(), images[cont]);
            imageButton[cont].addActionListener(this);
            panel.add(imageButton[cont]);
        }
        return panel;
    }
    
    private Icon insertDefaultImage() {
        Icon imageDefault = new ImageIcon(getClass().getClassLoader()
            .getResource(theme+"/bg.jpg"));
        return imageDefault;
    }
    
    private JPanel panelPlayer() {
        playerScore = new JLabel("player: " + player.getName()
                + " Pontos: " + player.getName());
        JPanel panel = new JPanel();
        panel.setBackground(Color.white);
        panel.add(playerScore);
        return panel;
    }
    
    @Override
    public void actionPerformed(ActionEvent ae) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
